services:
  mongodb:
      image: mongo:latest
      ports:
        - "27017:27017"
      volumes:
        - mongo-data:/data/db
        - ./mongodb/init-app-user.js:/docker-entrypoint-initdb.d/init-app-user.js:ro
      environment:
        - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
        - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
        - MONGO_APP_USERNAME=${MONGO_APP_USERNAME}
        - MONGO_APP_PASSWORD=${MONGO_APP_PASSWORD}
        - DB_NAME=${DB_NAME}
      networks:
        - secure_share_network
  
  backend:
    build:
      context: ./backend
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://${MONGO_APP_USERNAME}:${MONGO_APP_PASSWORD}@mongodb:27017/${DB_NAME}?authSource=${DB_NAME}&retryWrites=true&w=majority
      - FLASK_APP=${FLASK_APP:-app}
      - FLASK_ENV=${FLASK_ENV:-development}
      - DB_NAME=${DB_NAME}
    depends_on:
      - mongodb
    networks:
      - secure_share_network

  frontend:
    build:
      context: ./frontend
    ports:
      - "80:3000"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - REACT_APP_NAME=${REACT_APP_NAME}
      - REACT_APP_VERSION=${REACT_APP_VERSION}
      - GENERATE_SOURCEMAP=${GENERATE_SOURCEMAP}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - secure_share_network

networks:
  secure_share_network:


volumes:
  mongo-data:
